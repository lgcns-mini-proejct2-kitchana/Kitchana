services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: mysql
    volumes:
      - mysql_data:/var/lib/mysql
      - /sys/fs/cgroup
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u", "${MYSQL_USER}","-p${MYSQL_PASSWORD}", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "3308:3306"
    restart: on-failure

  config-server:
    image: kitcha/config
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-BE.git
      dockerfile: Config-server/Dockerfile
    container_name: config-server
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8071/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    expose:
      - "8071"
    depends_on:
      mysql:
        condition: service_started
    restart: on-failure

  eureka:
    image: kitcha/eureka
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-BE.git
      dockerfile: eureka/Dockerfile
    container_name: eureka
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

  gateway-server:
    image: kitcha/gateway
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-BE.git
      dockerfile: API-Gateway/Dockerfile
    environment:
      TOKEN_SECRET: ${TOKEN_SECRET}
      FRONTEND_SERVER: ${FRONTEND_SERVER}
    container_name: gateway-server
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8072/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "8072:8072"
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

  auth:
    image: kitcha/auth
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-Authentication.git
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TOKEN_SECRET: ${TOKEN_SECRET}
      TOKEN_EXPIRATION_TIME: ${TOKEN_EXPIRATION_TIME}
      TEST_USER_PASSWORD: ${TEST_USER_PASSWORD}
      TEST_ADMIN_PASSWORD: ${TEST_ADMIN_PASSWORD}
    container_name: auth
    networks:
      - kitcha_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8091/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    expose:
      - "8091"
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
    restart: on-failure

  article:
    image: kitcha/article
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-Article.git
    environment:
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      GROQ_API_KEY: ${GROQ_API_KEY}
    container_name: article
    networks:
      - kitcha_network
    expose:
      - "8080"
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
    restart: on-failure

  board:
    image: kitcha/board
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-Board.git
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: board
    networks:
      - kitcha_network
    expose:
      - "8080"
    depends_on:
      mysql:
        condition: service_healthy
      eureka:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
    restart: on-failure

  frontend:
    image: kitcha/frontend
    build:
      context: https://github.com/Team4-Kitcha/Kitcha-FE.git
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      auth:
        condition: service_healthy
    restart: on-failure

volumes:
  mysql_data:

networks:
  kitcha_network: